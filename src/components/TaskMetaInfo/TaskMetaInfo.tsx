import styles from './TaskMetaInfo.module.scss';
import { Badge } from '../Badge/Badge';
import { getTemplateInfoByValue } from '../../utils/getTemplateInfoByValue';
import type { Task } from '../../types/dbTypes';

type Props = Readonly<{
  start_time?: string;
  duration?: string;
  exp?: number;
  category?: Task['category'];
  priority?: Task['priority'];
  repeat_rule?: Task['repeat_rule'];
  source?: Task['source'];
  description?: string;
}>;

export function TaskMetaInfo({
  start_time,
  duration,
  exp,
  category,
  priority,
  repeat_rule,
  source,
  description,
}: Props) {
  const categoryInfo = category ? getTemplateInfoByValue('category', category) : null;
  const priorityInfo = priority ? getTemplateInfoByValue('priority', priority) : null;

  return (
    <div className={styles.meta}>
      <div className={styles.wrapper}>
        <div className={styles.top}>
          {start_time && <span title="–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞">üïí {start_time.slice(0, 5)}</span>}

          {duration && <span title="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å">‚è± {duration}</span>}
          {typeof exp === 'number' && (
            <span className={styles.exp} title="–û–ø—ã—Ç –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ">
              +{exp} ‚ö°
            </span>
          )}
        </div>
        <div className={styles.buttom}>
          {categoryInfo && (
            <span title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">
              <Badge {...categoryInfo} />
            </span>
          )}

          {priorityInfo && (
            <span title="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç">
              <Badge {...priorityInfo} />
            </span>
          )}

          {repeat_rule && (
            <span className={styles.customBadge} title="–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ">
              üîÅ{' '}
              {repeat_rule === 'daily'
                ? '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å'
                : repeat_rule === 'weekly'
                  ? '–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é'
                  : '–ö–≤–µ—Å—Ç'}
            </span>
          )}

          {source && (
            <span title="–ò—Å—Ç–æ—á–Ω–∏–∫">
              <Badge label={source} priority={2} />
            </span>
          )}
        </div>
      </div>

      {description && (
        <p className={styles.note} title="–û–ø–∏—Å–∞–Ω–∏–µ">
          {description}
        </p>
      )}
    </div>
  );
}
